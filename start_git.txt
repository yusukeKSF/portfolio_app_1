① Gitのインストール
Mac は最初からGitがインストールされている。
git --version 
でバージョンが表示されたらインストール済み。
もし、インストールされていなければ、

brew install git 

② Git の導入
1. まずGitがどこにインストールされているかパスを調べる。 
brew --prefix git
を実行すると、パスが表示される。

2. .zshrc にパスを追加する。
echo 'export PATH="②で表示されたパス/bin:$PATH"' >> ~/.zshrc
②で表示されるパスは、 /usr/local/opt/git などと表示される。
~/ 　=   /Users/ユーザ名　のこと

3. 変更を反映する。
source ~/.zshrc

4. /.zshrc の内容を確認したい時
nano ~/.zshrc

^o で変更を保存
^x で/.zshrcを閉じる

*　^ = controlキー

--------------------------------------------------------------
Gitの導入は、進行中のプロジェクトディレクトリで実行しても問題ない。
Git用のディレクトリが作成されるだけ。


--------------------------------------------------------------
③ Gitを使用する   *ローカル環境
--------------------------------------------------------------
1.メールアドレスを設定する。　　これは登録ではなく、設定である。
git config --global user.name "あなたの名前"               "yusukeSF"
git config --global user.email "あなたのメールアドレス"      "b.~@gmail.com"


2. リポジトリの初期化

3. Git を初期化 Gitを使用するプロジェクトディレクトリに移動する。
git init

4. (任意) 作成されたGITのブランチ名が "master" 出会った場合、"main"に変更する。 
git config --global init.defaultBranch main

* そのプロジェクトのみのブランチ名を設定したいのであれば、
git branch -m main


5. Git管理されているファイルを確認
bash
git status

----------------------
On branch main      ←ブランチ名
No commits yet      ←まだコミットされていない。ファイルが何も記録されていない。
Untracked files:    ←追跡されないファイル
----------------------


6. 初回コミットの準備(予約)　= "ステージングに追加する"
git add . 　　　←多分全てのファイルがコミットされる。
指定したファイルをコミットしたい場合は、
git add ファイル名.py  等

* ファイルを予約した後に、再び git status を実行すると、
---------------------------
Changes to be committed:   ←追跡されるファイル
予約されたファイル名が表示される。
---------------------------

7.初回コミットの実行
git commit -m "初回コミット: 開発途中でGit管理開始"   
* 必ず　git commit -m の後に "コメントを記述しておくようにする！"

----------------------------------------------------------
[main (root-commit) e6406ad] 初回コミット: 開発途中でGit管理開始
 3 files changed, 822 insertions(+)
 create mode 100644 journal_endpoint.py
 create mode 100644 journal_entry.py
 create mode 100644 journal_entry_back3.py
 ----------------------------------------------------------
 e6406ad ←コミットID


8. コミットしたログを確認する
bash
git log


9. gitファイルの追加と実行は 6. と 7. を繰り返し行う。
.gitignoreファイルもコミットすることを忘れないこと！


④ 新しいブランチを作る
bash
git checkout -b feature/dep_calc